#include <iostream>
#include <fstream>
#include <cstdlib>
#include <string>
using namespace std;

ofstream fout;
ifstream fin;
string in_bool;
string fname1, fname2, FOUT1, FOUT2;    //для имен файлов

const int KEY_ESC = 27;            //постоянаая ascii кода клавиши ESC
string trigger;
char ch, want;            //рабочие переменные
string str;


bool CheckContinue()
{
    cout << "Продолжать?"; cin.get(want);
    if (want == KEY_ESC) return false;
    else return true;
}


void CREATE_FILE_(bool X)
{

    setlocale(0, "");
    if (X == '0') {
        cout << "Создать новый файл или использовать уже существующий?(New/Exist): ";
        cin >> in_bool;
    }
    if (in_bool == "N")
    {
        if (X == '0') {
            printf("Введите название выходного файла: ");
            cin >> fname1;
        }
        fout.open(fname1);
        while (!fout.is_open())
        {
            cout << "\nЧто-то пошло не так! Введите название файла заново: ";
            cin >> fname1;
            fout.open(fname1);
        }

        cout << "\nФайл был успешно создан\n";
        int stcount;
        cin.clear();
        cout << "Введите количество строк: ";
        cin >> stcount;
        for (int i = -1; i != stcount; i++) {
            getline(cin, str, '\n');
            fout << str << '\n';
        }
    }
    else {
        if (X == 0) {
            printf("Введите название входного файла: ");
            cin >> fname1;
        }
        fout.open(fname1, ios_base::in);
        while (!fout.is_open())
        {
            cout << "\nЧто-то пошло не так! Введи название файла заново:  ";
            cin >> fname1;
            fout.open(fname1, ios_base::in);
        }
        printf("Открыл существущий входной файл %s\n", fname1.c_str());
    }
    fout.close();
    cout << "Завершил этап 1\n";
}




void EnterTrigger(bool X)  //Функция для задания триггера
{
    if (X == 0) {
        cout << "Введите триггер:\n";
        cin >> trigger;
        cin.clear();
    }
    printf("Триггер:%с", trigger.c_str());
}

void EnterName2(bool X)     //Аналогичная предыдущей функция для второго файла
{
    if (X == 0)
    {
        cout << "Введите имя выходного файла: ";
        cin.clear();
        cin >> fname2;
    }
    fout.open(fname2);
    printf("\nОткрыл % s", fname2.c_str());
    while (!fout.is_open())
    {
        cout << "Error! File is not open!" << endl;
        cout << "Try again." << endl;
        cin >> fname2;
        fout.open(fname2);
    }
}


void OpenInput()      //Функция открывающая файл для чтения с проверкой на успешность операции
{
    fin.open(fname1, ios_base::in);
    while (!fin.is_open())
    {
        cout << "Error! File is not found!" << endl;
        cout << "Try again. Enter correct file name." << endl;
        cin >> fname1;
        fin.open(fname1);
    }
}

void CreateOutput()
{
    char ch;
    trigger = trigger.c_str();
    char* ctrigger = &trigger[0];
    while (!fin.eof()) {
        getline(fin, str);
        for (int i = 0; i < str.length(); i++) {
            fout << str[i];
            if (str[i] == *ctrigger) {
                i++;
                while (str[i] != *ctrigger && i < str.length())
                {
                    i++;
                }
                if (str[i] == *ctrigger)
                    fout << str[i];
            }
        }
        fout << '\n';
    }
    cout << "\nФайл успешно создан" << endl << endl;
}

void PrintOut() {
    string str1;

    char ch;		//текущий символ
    trigger = trigger.c_str();
    char* ctrigger = &trigger[0];
    int len = -1;	//len = -1, если не всретили trigger, len > 0 - втретили trigger

    while ((ch = fin.get()) != EOF)		//считали 1 символ
    {
        if (ch == *ctrigger) {
            // write_state *= -1;
            if (len == -1) {
                len = str1.size();
            }
            else {
                str1.resize(len);
                len = -1;
                continue;
            }
        }
        str1 += ch;
        if (ch == '\n') {
            // write_state = 1;
            len = -1;
            fout << str1;
            str1 = "";
        }
    }
}

int main(int argc, char* argv[])   //...и сама функция main
{
    bool CHOOSE;
    string inp;
    setlocale(0, "");
    cout << "Получать ввод с клавиатуры[0] или использовать аргументы из консоли[1]? ";
    cin >> CHOOSE;

    //system("cls"); //очистка cmd
    printf("\nВаш выбор - %d\n\n", CHOOSE);
    if (argc > 2 && CHOOSE == 1)
    {
        in_bool = argv[1];
        fname1 = argv[2];
    }
    CREATE_FILE_(CHOOSE);
    if (CHOOSE == 1 && argc >4) {
        trigger = argv[3];;
        printf("Триггер: %c", trigger.c_str());
        //string trigger = trigger;
    }
    EnterTrigger(CHOOSE);
    fname2 = argv[4];
    EnterName2(CHOOSE);
    inp = argv[5];
    
    OpenInput();
    CreateOutput();
    fin.close();
    fout.close();

    if (CHOOSE == '0') {
        cout << "\nВывод содержимого файлов:\nИспользовать консоль (0) или Notepad(1)? ";
        cin >> inp;
    };
    if (inp == "0")
    {
        inp = "type ";
    }
    else inp = "notepad ";
    string type1 = inp + fname1;
    string type2 = inp + fname2;
    system("color 3");
    cout << "\nВХОД: \n";
    system(type1.c_str());
    cout << "\nКОНЕЦ ВХОДА\n";
    cout << "\nВЫВОД:\n";
    system(type2.c_str());
    cout << "\nКОНЕЦ ВЫВОДА\n";
    cout << "\nЗадание:\n\tУдаление из каждой строки последовательности символов, ограниченных с обеих сторон заданным символом";
    return 0;
}
